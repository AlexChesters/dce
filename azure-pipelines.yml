
pool:
  vmImage: 'Ubuntu 16.04'

pr:
- master      

steps:

- task: TerraformInstaller@0
  inputs:
    terraformVersion: '0.12.0'
  condition: always()

- task: GoTool@0
  inputs:
    version: '1.12.6'
  displayName: 'Set up the Go workspace'

- script: |
    ./scripts/install_ci.sh
  displayName: 'Set up Golang CI Tools'

#- script: |
#    make lint
#  displayName: 'Run lint'    

- script: |
    ./scripts/test.sh
  displayName: 'Run Tests'

- script: |
    make build
  displayName: 'Make build'    

- task: PublishTestResults@2
  inputs:
    testRunner: JUnit
    testResultsFiles: $(System.DefaultWorkingDirectory)/junit-report/report.xml

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura 
    summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage.xml

- task: TerraformTaskV1@0
  displayName: 'terraform init'
  inputs:
    provider: 'aws'
    command: 'init'
    workingDirectory: './modules'
    backendServiceAWS: 'AWS_Terraform_Connection'
    backendAWSBucketName: '391501768339-redbox-tfstate'
    backendAWSKey: 'pr-$(System.PullRequest.PullRequestNumber)/terraform.tfstate'

- task: TerraformTaskV1@0
  displayName: 'terraform apply'
  inputs:
    provider: 'aws'
    command: 'apply'
    workingDirectory: './modules'
    commandOptions: '-var="namespace=pr-$(System.PullRequest.PullRequestNumber)" -var="budget_notification_from_email=Test@Test.com"'
    environmentServiceNameAWS: 'AWS_Terraform_Connection'